{"version":3,"sources":["logo.webp","pages/Home.js","pages/About.js","pages/Contact.js","pages/Login.js","pages/SignUp.js","components/NavBar.js","components/EmbeddedMap.js","App.js","index.js"],"names":["module","exports","Home","_ref","showMapButtonRef","React","createElement","className","onClick","handleGetStartedClick","current","scrollIntoView","behavior","block","About","Contact","Login","email","setEmail","useState","password","setPassword","error","setError","success","setSuccess","onSubmit","async","e","preventDefault","response","axios","post","localStorage","setItem","data","token","message","type","value","onChange","target","required","style","color","SignUp","username","setUsername","NavBar","isMenuOpen","setIsMenuOpen","NavLink","to","src","logo","alt","aria-label","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","exact","EmbeddedMap","display","justifyContent","marginTop","width","height","border","allowFullScreen","loading","referrerPolicy","title","App","showMap","setShowMap","useRef","Routes","Route","path","element","textAlign","margin","handleToggleMap","prevShowMap","ref","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0ad0169a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bd96ab9e.webp\";","import React from 'react';\r\n\r\n// import EmbeddedMap from '../components/EmbeddedMap'; // Correct import for EmbeddedMap\r\n\r\nfunction Home({ showMapButtonRef }) {\r\n  // Function to handle \"Get Started\" button click and scroll to \"Show Map\" button\r\n  const handleGetStartedClick = () => {\r\n    if (showMapButtonRef && showMapButtonRef.current) {\r\n      showMapButtonRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      {/* Welcome Section */}\r\n      <div className=\"bg-white shadow-md rounded-lg p-8 w-full max-w-md text-center\">\r\n        <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">Welcome to Tracker</h1>\r\n        <p className=\"text-gray-600 mb-6\">\r\n          Tracker is a powerful mobile tracking system that helps you stay connected with your devices in real-time.\r\n          Locate, monitor, and manage your mobile devices effortlessly.\r\n        </p>\r\n\r\n        {/* Call to Action Button with Scroll Functionality */}\r\n        <button\r\n          className=\"bg-blue-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-blue-700\"\r\n          onClick={handleGetStartedClick} // Attach the scroll function to this button\r\n        >\r\n          Get Started\r\n        </button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>About</div>\r\n  )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>Contact</div>\r\n  )\r\n}\r\n\r\nexport default Contact","// src/pages/Login.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      setSuccess('Login successful!');\r\n      setError('');\r\n      // Optionally, handle token (e.g., save to local storage)\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      setError(error.response.data.message || 'Something went wrong');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// src/pages/SignUp.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SignUp = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Reset error before new submission\r\n    setSuccess(''); // Reset success message before new submission\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/signup', {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      \r\n      // Assuming your backend sends a success message\r\n      setSuccess(response.data.message);\r\n      \r\n      // Reset fields after successful signup\r\n      setUsername('');\r\n      setEmail('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      // Check if there's a response from the backend\r\n      if (error.response) {\r\n        // Handle known error from the backend\r\n        setError(error.response.data.error || 'Something went wrong');\r\n      } else {\r\n        // Handle any other errors (e.g., network issues)\r\n        setError('Network error, please try again later');\r\n      }\r\n      setSuccess(''); // Clear success message on error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\nimport logo from 'F:/TYProject/mobiletracker/mobiletracker/frontend/src/logo.webp'; // Assuming logo is located in the src directory\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const NavBar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"bg-blue-600 text-white p-2 shadow-md\">\r\n        <nav className=\"container mx-auto flex justify-between items-center px-4 py-3 md:flex-row md:justify-between\">\r\n          {/* Logo Section */}\r\n          <NavLink to=\"/\" className=\"flex items-center text-2xl font-bold\">\r\n            <img src={logo} className=\"w-12 h-12 rounded-full mr-2\" alt=\"Logo\" />\r\n            <span className=\"text-white\">Trace Point</span>\r\n          </NavLink>\r\n\r\n          {/* Hamburger Menu Button for Mobile */}\r\n          <button\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            className=\"md:hidden text-white focus:outline-none\"\r\n            aria-label=\"Toggle Menu\"\r\n          >\r\n            <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d={isMenuOpen ? 'M6 18L18 6M6 6l12 12' : 'M4 6h16M4 12h16M4 18h16'}\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Desktop Navigation Links */}\r\n          <ul className=\"hidden md:flex space-x-8 text-lg font-medium\">\r\n            <li>\r\n              <NavLink exact to=\"/\" className=\"text-gray-200 hover:text-white\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./about\" className=\"text-gray-200 hover:text-white\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./login\" className=\"text-gray-200 hover:text-white\">\r\n                Sign\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./signup\" className=\"text-gray-200 hover:text-white\">\r\n                Sign Up\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./contact\" className=\"text-gray-200 hover:text-white\">\r\n                Contact\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst EmbeddedMap = () => {\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n      <iframe\r\n        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d119269.98113236176!2d73.75773779627606!3d18.498271827016914!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bc2c014271918c5%3A0xfa3ce63f0c494d3f!2sSwargate%2C%20Pune%2C%20Maharashtra!5e0!3m2!1sen!2sin!4v1727718762982!5m2!1sen!2sin\"\r\n        width=\"1700\"\r\n        height=\"750\"\r\n        style={{ border: \"0\" }}\r\n        allowFullScreen=\"\"\r\n        loading=\"lazy\"\r\n        referrerPolicy=\"no-referrer-when-downgrade\"\r\n        title=\"Google Map\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmbeddedMap;\r\n","import React, { useState, useRef } from 'react';\nimport { Route, Routes } from 'react-router-dom'; // Use Routes and Route for rendering different pages\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport { NavBar } from './components/NavBar';\nimport EmbeddedMap from './components/EmbeddedMap';\n\nfunction App() {\n  const [showMap, setShowMap] = useState(false);\n  const showMapButtonRef = useRef(null);\n\n  const handleToggleMap = () => {\n    setShowMap((prevShowMap) => !prevShowMap);\n  };\n\n  return (\n    <div>\n      <NavBar />\n      {/* Define the main routes of your app */}\n      <Routes>\n        <Route path=\"/\" element={<Home showMapButtonRef={showMapButtonRef} />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n      </Routes>\n\n      {/* Toggle Button for Google Map */}\n      <div style={{ textAlign: 'center', margin: '20px' }}>\n        <button\n          className=\"bg-blue-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-blue-700\"\n          onClick={handleToggleMap}\n          ref={showMapButtonRef}\n        >\n          {showMap ? 'Hide Map' : 'Show Map'}\n        </button>\n      </div>\n\n      {/* Conditionally render the embedded map */}\n      {showMap && (\n        <div style={{ margin: '20px auto', display: 'flex', justifyContent: 'center' }}>\n          <EmbeddedMap />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// eslint-disable-next-line\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}