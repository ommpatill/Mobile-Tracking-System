{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\components\\\\GoogleMapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '750px',\n  border: '0',\n  marginTop: '20px'\n};\nlet center = {\n  lat: 18.4597,\n  // Swargate, Pune latitude\n  lng: 73.8839 // Swargate, Pune longitude\n};\nconst GoogleMapComponent = currentLocation => {\n  _s();\n  //console.log(\"GoogleMapComponent>>>> \", currentLocation);\n\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [currentLocation1, setCurrentLocation1] = useState();\n\n  // useEffect(() => {\n  //   const geo = navigator.geolocation;\n\n  //   if (geo) {\n  //     const getLocation = () => {\n  //       geo.getCurrentPosition(\n  //         (position) => {\n  //           setLatitude(position.coords.latitude);\n  //           setLongitude(position.coords.longitude);\n  //                const c = {\n  //     lat: position.coords.latitude,  // Swargate, Pune latitude\n  //     lng: position.coords.longitude,  // Swargate, Pune longitude\n  //   };\n  //   setCurrentLocation1(c);\n  //         },\n  //         (error) => console.error('Error getting location:', error),\n  //         {\n  //           enableHighAccuracy: true,\n  //           timeout: 5000,\n  //           maximumAge: 0,\n  //         }\n  //       );\n  //     };\n\n  //     getLocation();\n  //     const locationInterval = setInterval(getLocation, 300000);\n\n  //     return () => clearInterval(locationInterval);\n  //   } else {\n  //     console.error('Geolocation is not supported by this browser.');\n  //   }\n  // }, []);\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8' // Replace with your Google Maps API Key\n  });\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(function callback(map) {\n    console.log(\"currentLocation1 from callback......\", currentLocation);\n    const bounds = new window.google.maps.LatLngBounds(currentLocation1);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  //console.log(\"isLoaded:: \", isLoaded,\"    lat: \",latitude, \"    long: \", longitude , \"  c: \",currentLocation1 )\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentLocation1,\n      zoom: 13,\n      onLoad: () => onLoad(),\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Google Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"+a4a2JCtZGw28xYIjnFNcsnsjbI=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","GoogleMap","useJsApiLoader","Marker","GPSLiveLocation","jsxDEV","_jsxDEV","containerStyle","width","height","border","marginTop","center","lat","lng","GoogleMapComponent","currentLocation","_s","latitude","setLatitude","longitude","setLongitude","currentLocation1","setCurrentLocation1","isLoaded","googleMapsApiKey","map","setMap","onLoad","callback","console","log","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","style","display","flexDirection","alignItems","children","mapContainerStyle","zoom","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/components/GoogleMapComponent.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '750px',\r\n  border: '0',\r\n  marginTop: '20px',\r\n};\r\n\r\nlet center = {\r\n  lat: 18.4597,  // Swargate, Pune latitude\r\n  lng: 73.8839,  // Swargate, Pune longitude\r\n};\r\n\r\n\r\n\r\nconst GoogleMapComponent = (currentLocation) => {\r\n\r\n  //console.log(\"GoogleMapComponent>>>> \", currentLocation);\r\n\r\n  const [latitude, setLatitude] = useState()\r\nconst [longitude, setLongitude] = useState()\r\nconst[currentLocation1, setCurrentLocation1]=useState();\r\n\r\n// useEffect(() => {\r\n//   const geo = navigator.geolocation;\r\n\r\n//   if (geo) {\r\n//     const getLocation = () => {\r\n//       geo.getCurrentPosition(\r\n//         (position) => {\r\n//           setLatitude(position.coords.latitude);\r\n//           setLongitude(position.coords.longitude);\r\n//                const c = {\r\n//     lat: position.coords.latitude,  // Swargate, Pune latitude\r\n//     lng: position.coords.longitude,  // Swargate, Pune longitude\r\n//   };\r\n//   setCurrentLocation1(c);\r\n//         },\r\n//         (error) => console.error('Error getting location:', error),\r\n//         {\r\n//           enableHighAccuracy: true,\r\n//           timeout: 5000,\r\n//           maximumAge: 0,\r\n//         }\r\n//       );\r\n//     };\r\n\r\n//     getLocation();\r\n//     const locationInterval = setInterval(getLocation, 300000);\r\n\r\n//     return () => clearInterval(locationInterval);\r\n//   } else {\r\n//     console.error('Geolocation is not supported by this browser.');\r\n//   }\r\n// }, []);\r\n\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8', // Replace with your Google Maps API Key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    console.log(\"currentLocation1 from callback......\", currentLocation)\r\n    const bounds = new window.google.maps.LatLngBounds(currentLocation1);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  //console.log(\"isLoaded:: \", isLoaded,\"    lat: \",latitude, \"    long: \", longitude , \"  c: \",currentLocation1 )\r\n  return (isLoaded  ) ? (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={currentLocation1}\r\n        zoom={13}\r\n        onLoad={()=>onLoad()}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Add a marker at Swargate, Pune */}\r\n        {/* <Marker position={currentLocation?.currentLocation} /> */}\r\n        <Marker position={currentLocation1} />\r\n      </GoogleMap>\r\n\r\n      {/* Add GPSLiveLocation component with styling */}\r\n      {/* <div className=\"gps-live-location\" style={{ marginTop: '20px', padding: '10px', backgroundColor: 'white', boxShadow: '0 2px 5px rgba(0,0,0,0.2)', borderRadius: '5px', width: '90%' }}>\r\n        <h3 className=\"text-lg font-semibold\">Live GPS Location</h3>\r\n        <GPSLiveLocation />\r\n      </div> */}\r\n    </div>\r\n  ) : (\r\n    <div>Loading Google Map...</div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}