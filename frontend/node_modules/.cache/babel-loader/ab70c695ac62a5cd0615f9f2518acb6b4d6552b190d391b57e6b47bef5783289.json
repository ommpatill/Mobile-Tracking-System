{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\components\\\\GoogleMapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '750px',\n  border: '0',\n  marginTop: '20px'\n};\nlet center = {\n  lat: 18.4597,\n  // Swargate, Pune latitude\n  lng: 73.8839 // Swargate, Pune longitude\n};\nconst GoogleMapComponent = currentLocation => {\n  _s();\n  console.log(\"GoogleMapComponent>>>> \", currentLocation);\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (geo) {\n      const getLocation = () => {\n        geo.getCurrentPosition(position => {\n          setLatitude(position.coords.latitude);\n          setLongitude(position.coords.longitude);\n        }, error => console.error('Error getting location:', error), {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        });\n      };\n      getLocation();\n      const locationInterval = setInterval(getLocation, 300000);\n      return () => clearInterval(locationInterval);\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8' // Replace with your Google Maps API Key\n  });\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  console.log(\"isLoaded: \", isLoaded, \"    lat: \", currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.currentLocation);\n  return isLoaded && latitude && longitude ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.currentLocation,\n      zoom: 13,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: [latitude, longitude]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Google Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"Voc3D/rN23Wh1NAH2TZb8PBKCTQ=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","GoogleMap","useJsApiLoader","Marker","GPSLiveLocation","jsxDEV","_jsxDEV","containerStyle","width","height","border","marginTop","center","lat","lng","GoogleMapComponent","currentLocation","_s","console","log","latitude","setLatitude","longitude","setLongitude","geo","navigator","geolocation","getLocation","getCurrentPosition","position","coords","error","enableHighAccuracy","timeout","maximumAge","locationInterval","setInterval","clearInterval","isLoaded","googleMapsApiKey","map","setMap","onLoad","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","style","display","flexDirection","alignItems","children","mapContainerStyle","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/components/GoogleMapComponent.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '750px',\r\n  border: '0',\r\n  marginTop: '20px',\r\n};\r\n\r\nlet center = {\r\n  lat: 18.4597,  // Swargate, Pune latitude\r\n  lng: 73.8839,  // Swargate, Pune longitude\r\n};\r\n\r\n\r\n\r\nconst GoogleMapComponent = (currentLocation) => {\r\n\r\n  console.log(\"GoogleMapComponent>>>> \", currentLocation);\r\n\r\n  const [latitude, setLatitude] = useState()\r\nconst [longitude, setLongitude] = useState()\r\n\r\nuseEffect(() => {\r\n  const geo = navigator.geolocation;\r\n\r\n  if (geo) {\r\n    const getLocation = () => {\r\n      geo.getCurrentPosition(\r\n        (position) => {\r\n          setLatitude(position.coords.latitude);\r\n          setLongitude(position.coords.longitude);\r\n        },\r\n        (error) => console.error('Error getting location:', error),\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 5000,\r\n          maximumAge: 0,\r\n        }\r\n      );\r\n    };\r\n\r\n    getLocation();\r\n    const locationInterval = setInterval(getLocation, 300000);\r\n\r\n    return () => clearInterval(locationInterval);\r\n  } else {\r\n    console.error('Geolocation is not supported by this browser.');\r\n  }\r\n}, []);\r\n\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8', // Replace with your Google Maps API Key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  console.log(\"isLoaded: \", isLoaded,\"    lat: \",currentLocation?.currentLocation  )\r\n  return (isLoaded && latitude && longitude ) ? (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={currentLocation?.currentLocation}\r\n        zoom={13}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Add a marker at Swargate, Pune */}\r\n        {/* <Marker position={currentLocation?.currentLocation} /> */}\r\n        <Marker position={[latitude, longitude]} />\r\n      </GoogleMap>\r\n\r\n      {/* Add GPSLiveLocation component with styling */}\r\n      {/* <div className=\"gps-live-location\" style={{ marginTop: '20px', padding: '10px', backgroundColor: 'white', boxShadow: '0 2px 5px rgba(0,0,0,0.2)', borderRadius: '5px', width: '90%' }}>\r\n        <h3 className=\"text-lg font-semibold\">Live GPS Location</h3>\r\n        <GPSLiveLocation />\r\n      </div> */}\r\n    </div>\r\n  ) : (\r\n    <div>Loading Google Map...</div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}