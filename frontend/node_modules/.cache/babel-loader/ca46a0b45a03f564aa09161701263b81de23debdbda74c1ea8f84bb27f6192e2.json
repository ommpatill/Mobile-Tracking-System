{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\nimport { Route, Routes } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Login from './pages/Login'; // Login page\nimport SignUp from './pages/SignUp'; // SignUp page\nimport { NavBar } from './components/NavBar';\nimport EmbeddedMap from './components/EmbeddedMap';\nimport GoogleMapComponent from './components/GoogleMapComponent';\nimport History from './pages/History'; // Use History component\nimport GPSLiveLocation from './components/GPSLiveLocation.jsx'; // Import the GPSLiveLocation component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showMap, setShowMap] = useState(false);\n  const [username, setUsername] = useState(''); // State to hold the username from login\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track if user is logged in\n  const showMapButtonRef = useRef(null);\n  const navigate = useNavigate();\n  const [currentLocation, setCurrentLocation] = useState();\n  const geo = navigator.geolocation;\n\n  // Get User Current Location\n  geo.getCurrentPosition(userCoords);\n  function userCoords(position) {\n    let userLatitude = position.coords.latitude;\n    let userLongitude = position.coords.longitude;\n    // console.log(\"Latitude: \", userLatitude);\n    // console.log(\"Longitude: \", userLongitude);\n    const c = {\n      lat: userLatitude,\n      // Swargate, Pune latitude\n      lng: userLongitude // Swargate, Pune longitude\n    };\n    setCurrentLocation(c);\n    console.log(\"current location>>>> \", currentLocation);\n  }\n\n  // Check if user is already logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (token && storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n  }, []);\n\n  // Handle logout functionality\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Clear the token from localStorage\n    localStorage.removeItem('username'); // Clear the username\n    setIsLoggedIn(false); // Set login state to false\n    setUsername(''); // Clear username state\n    // Redirect to login page after signup success\n    navigate('/');\n    // navigate('/login'); // Redirect user to login page\n    // window.location.href = '/login'; // This will perform a full page reload and navigate to login\n    // window.history.pushState({}, '', '/login');\n  };\n  const handleToggleMap = () => {\n    setShowMap(prevShowMap => !prevShowMap);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      username: username,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            username: username,\n            showMapButtonRef: showMapButtonRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setUsername: name => {\n              setUsername(name);\n              localStorage.setItem('username', name);\n            },\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signuptest\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Profile Page - Welcome, \", username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/map\",\n          element: /*#__PURE__*/_jsxDEV(GoogleMapComponent, {\n            currentLocation: currentLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/history\",\n          element: /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/livegps\",\n          element: /*#__PURE__*/_jsxDEV(GPSLiveLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), showMap && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(EmbeddedMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n    //   <div className=\"my-5 flex justify-center\">\n    //   <GoogleMap />\n    // </div>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NSuH5aOH0dufxzcUGBVbuCoTFo8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Route","Routes","useNavigate","Home","About","Contact","Login","SignUp","NavBar","EmbeddedMap","GoogleMapComponent","History","GPSLiveLocation","jsxDEV","_jsxDEV","App","_s","showMap","setShowMap","username","setUsername","isLoggedIn","setIsLoggedIn","showMapButtonRef","navigate","currentLocation","setCurrentLocation","geo","navigator","geolocation","getCurrentPosition","userCoords","position","userLatitude","coords","latitude","userLongitude","longitude","c","lat","lng","console","log","token","localStorage","getItem","storedUsername","handleLogout","removeItem","handleToggleMap","prevShowMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","name","setItem","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n// import { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Contact from './pages/Contact';\r\nimport Login from './pages/Login'; // Login page\r\nimport SignUp from './pages/SignUp'; // SignUp page\r\nimport { NavBar } from './components/NavBar';\r\nimport EmbeddedMap from './components/EmbeddedMap';\r\nimport GoogleMapComponent from './components/GoogleMapComponent';\r\nimport History from './pages/History'; // Use History component\r\nimport GPSLiveLocation from './components/GPSLiveLocation.jsx'; // Import the GPSLiveLocation component\r\n\r\nfunction App() {\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [username, setUsername] = useState(''); // State to hold the username from login\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track if user is logged in\r\n  const showMapButtonRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const[currentLocation, setCurrentLocation]=useState();\r\n\r\n  const geo = navigator.geolocation\r\n\r\n  // Get User Current Location\r\n  geo.getCurrentPosition(userCoords)\r\n  function userCoords(position) {\r\n    let userLatitude = position.coords.latitude\r\n    let userLongitude = position.coords.longitude\r\n    // console.log(\"Latitude: \", userLatitude);\r\n    // console.log(\"Longitude: \", userLongitude);\r\n      const c = {\r\n    lat: userLatitude,  // Swargate, Pune latitude\r\n    lng: userLongitude,  // Swargate, Pune longitude\r\n  };\r\n  setCurrentLocation(c);\r\n  console.log(\"current location>>>> \", currentLocation)\r\n  }\r\n\r\n  // Check if user is already logged in on initial load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (token && storedUsername) {\r\n      setIsLoggedIn(true);\r\n      setUsername(storedUsername);\r\n    }\r\n  }, []);\r\n\r\n  // Handle logout functionality\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token'); // Clear the token from localStorage\r\n    localStorage.removeItem('username'); // Clear the username\r\n    setIsLoggedIn(false); // Set login state to false\r\n    setUsername(''); // Clear username state\r\n    // Redirect to login page after signup success\r\n    navigate('/'); \r\n    // navigate('/login'); // Redirect user to login page\r\n    // window.location.href = '/login'; // This will perform a full page reload and navigate to login\r\n    // window.history.pushState({}, '', '/login');\r\n  };\r\n\r\n  const handleToggleMap = () => {\r\n    setShowMap((prevShowMap) => !prevShowMap);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\">\r\n      <NavBar isLoggedIn={isLoggedIn} username={username} handleLogout={handleLogout} /> {/* Pass isLoggedIn, username, and handleLogout */}\r\n\r\n      {/* Define the main routes of your app */}\r\n      <div className=\"flex-grow\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home username={username} showMapButtonRef={showMapButtonRef} />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n          <Route path=\"/contact\" element={<Contact />} />\r\n          {/* Pass setUsername and setIsLoggedIn as props to Login and SignUp components */}\r\n          <Route path=\"/login\" element={<Login setUsername={(name) => { setUsername(name); localStorage.setItem('username', name); }} setIsLoggedIn={setIsLoggedIn} />} />\r\n          {/* <Route path=\"/login\" element={<Login />} /> */}\r\n          <Route path=\"/signup\" element={<SignUp />} />\r\n          <Route path=\"/signuptest\" element={<SignUp />} />\r\n          <Route path=\"/profile\" element={<div>Profile Page - Welcome, {username}!</div>} /> {/* Add Profile Route */}\r\n          {/* <Route path=\"/map\" element={<EmbeddedMap />} /> another option to show dummy map */}\r\n          <Route path=\"/map\" element={<GoogleMapComponent currentLocation={currentLocation} />} /> {/* Placeholder for Map Route */}\r\n          <Route path=\"/history\" element={<History />} /> {/* Use History component here */}\r\n          <Route path=\"/livegps\" element={<GPSLiveLocation />} /> {/* New route for GPSLiveLocation */}\r\n        </Routes>\r\n      </div>\r\n\r\n      {/* Toggle Button for Google Map - Only show if user is logged in */}\r\n      {isLoggedIn && (\r\n        <div className=\"text-center my-5\">\r\n          {/* <button\r\n            className=\"bg-blue-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-blue-700\"\r\n            onClick={handleToggleMap}\r\n            ref={showMapButtonRef}\r\n          >\r\n            {showMap ? 'Hide Map' : 'Show Map'}\r\n          </button> */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Conditionally render the embedded map */}\r\n      {showMap && (\r\n        <div className=\"my-5 flex justify-center\">\r\n          <EmbeddedMap />\r\n        </div>\r\n      //   <div className=\"my-5 flex justify-center\">\r\n      //   <GoogleMap />\r\n      // </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}