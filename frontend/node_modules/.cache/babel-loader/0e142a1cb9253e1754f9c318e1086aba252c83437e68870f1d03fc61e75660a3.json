{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\components\\\\GoogleMapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '750px',\n  border: '0',\n  marginTop: '20px'\n};\nconst center = {\n  lat: 18.4597,\n  // Swargate, Pune latitude\n  lng: 73.8839 // Swargate, Pune longitude\n};\nconst geo = navigator.geolocation;\nconst GoogleMapComponent = () => {\n  _s();\n  console.log(\"GoogleMapComponent>>>> \");\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8' // Replace with your Google Maps API Key\n  });\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 13,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gps-live-location\",\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        backgroundColor: 'white',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n        borderRadius: '5px',\n        width: '90%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"Live GPS Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GPSLiveLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Google Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","useJsApiLoader","Marker","GPSLiveLocation","jsxDEV","_jsxDEV","containerStyle","width","height","border","marginTop","center","lat","lng","geo","navigator","geolocation","GoogleMapComponent","_s","console","log","isLoaded","googleMapsApiKey","map","setMap","onLoad","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","style","display","flexDirection","alignItems","children","mapContainerStyle","zoom","position","fileName","_jsxFileName","lineNumber","columnNumber","className","padding","backgroundColor","boxShadow","borderRadius","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/components/GoogleMapComponent.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport GPSLiveLocation from '../components/GPSLiveLocation'; // Adjusted import path\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '750px',\r\n  border: '0',\r\n  marginTop: '20px',\r\n};\r\n\r\nconst center = {\r\n  lat: 18.4597,  // Swargate, Pune latitude\r\n  lng: 73.8839,  // Swargate, Pune longitude\r\n};\r\n\r\nconst geo = navigator.geolocation\r\n\r\nconst GoogleMapComponent = () => {\r\n  console.log(\"GoogleMapComponent>>>> \");\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8', // Replace with your Google Maps API Key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={13}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Add a marker at Swargate, Pune */}\r\n        <Marker position={center} />\r\n      </GoogleMap>\r\n\r\n      {/* Add GPSLiveLocation component with styling */}\r\n      <div className=\"gps-live-location\" style={{ marginTop: '20px', padding: '10px', backgroundColor: 'white', boxShadow: '0 2px 5px rgba(0,0,0,0.2)', borderRadius: '5px', width: '90%' }}>\r\n        <h3 className=\"text-lg font-semibold\">Live GPS Location</h3>\r\n        <GPSLiveLocation />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>Loading Google Map...</div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,QAAQ,wBAAwB;AAC1E,OAAOC,eAAe,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,OAAO;EACfC,MAAM,EAAE,GAAG;EACXC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EAAG;EACfC,GAAG,EAAE,OAAO,CAAG;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGC,SAAS,CAACC,WAAW;AAEjC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtC,MAAM;IAAEC;EAAS,CAAC,GAAGpB,cAAc,CAAC;IAClCqB,gBAAgB,EAAE,yCAAyC,CAAE;EAC/D,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAM0B,MAAM,GAAG3B,WAAW,CAAC,SAAS4B,QAAQA,CAACH,GAAG,EAAE;IAChD,MAAMI,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACpB,MAAM,CAAC;IAC1DY,GAAG,CAACS,SAAS,CAACL,MAAM,CAAC;IACrBH,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,SAAS,GAAGnC,WAAW,CAAC,SAAS4B,QAAQA,CAACH,GAAG,EAAE;IACnDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,QAAQ,gBACbhB,OAAA;IAAK6B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC7EjC,OAAA,CAACL,SAAS;MACRuC,iBAAiB,EAAEjC,cAAe;MAClCK,MAAM,EAAEA,MAAO;MACf6B,IAAI,EAAE,EAAG;MACTf,MAAM,EAAEA,MAAO;MACfQ,SAAS,EAAEA,SAAU;MAAAK,QAAA,eAGrBjC,OAAA,CAACH,MAAM;QAACuC,QAAQ,EAAE9B;MAAO;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAGZxC,OAAA;MAAKyC,SAAS,EAAC,mBAAmB;MAACZ,KAAK,EAAE;QAAExB,SAAS,EAAE,MAAM;QAAEqC,OAAO,EAAE,MAAM;QAAEC,eAAe,EAAE,OAAO;QAAEC,SAAS,EAAE,2BAA2B;QAAEC,YAAY,EAAE,KAAK;QAAE3C,KAAK,EAAE;MAAM,CAAE;MAAA+B,QAAA,gBACpLjC,OAAA;QAAIyC,SAAS,EAAC,uBAAuB;QAAAR,QAAA,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DxC,OAAA,CAACF,eAAe;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,gBAENxC,OAAA;IAAAiC,QAAA,EAAK;EAAqB;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAChC;AACH,CAAC;AAAC3B,EAAA,CAxCID,kBAAkB;EAAA,QAEDhB,cAAc;AAAA;AAAAkD,EAAA,GAF/BlC,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}