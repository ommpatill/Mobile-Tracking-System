{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\components\\\\GPSLiveLocation.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [userAddress, setUserAddress] = useState();\n  const [GPSLatitude, setGPSLatitude] = useState();\n  const [GPSLongitude, setGPSLongitude] = useState();\n  const geo = navigator.geolocation;\n\n  // Get User Current Location\n  geo.getCurrentPosition(userCoords);\n  function userCoords(position) {\n    let userLatitude = position.coords.latitude;\n    let userLongitude = position.coords.longitude;\n    // console.log(\"Latitude: \", userLatitude);\n    // console.log(\"Longitude: \", userLongitude);\n    setLatitude(userLatitude);\n    setLongitude(userLongitude);\n  }\n  const getUserAddress = async () => {\n    // let url = `https://api.opencagedata.com/geocode/v1/json?key=a8cd7eea001442e684440f396f71f97f&q=${latitude}%2C+${longitude}&pretty=1&no_annotations=1`\n    let url = `https://api.opencagedata.com/geocode/v1/json?key=55fb48633b1a4feea66fd7fdd0170d95&q=52.3877830%2C+9.7334394&pretty=1&no_annotations=1`;\n    const loc = await fetch(url);\n    const data = await loc.json();\n    console.log(\"User Address: \", data);\n    console.log(\"User City: \", data.results[0].components.city);\n    setUserAddress(data.results[0].formatted);\n  };\n  const handleGetUserAddress = () => {\n    getUserAddress();\n  };\n\n  // Get User GPS Current Location\n  const watchID = geo.watchPosition(userGPSCoords);\n  function userGPSCoords(position) {\n    let userGPSLatitude = position.coords.latitude;\n    let userGPSLongitude = position.coords.longitude;\n    console.log(\"Latitude: \", userGPSLatitude);\n    console.log(\"Longitude: \", userGPSLongitude);\n    setGPSLatitude(userGPSLatitude);\n    setGPSLongitude(userGPSLongitude);\n  }\n\n  // const stopGPS = () => {\n  //   geo.clearWatch(watchID)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"latitude- \", latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"longitude- \", longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"User Address- \", userAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetUserAddress,\n      children: \"Get User Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GPS Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"GPS Latitude:- \", GPSLatitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"GPS Longitude:- \", GPSLongitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Nq4XWD5KAJbIsvvZVAtAYInP8no=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","latitude","setLatitude","longitude","setLongitude","userAddress","setUserAddress","GPSLatitude","setGPSLatitude","GPSLongitude","setGPSLongitude","geo","navigator","geolocation","getCurrentPosition","userCoords","position","userLatitude","coords","userLongitude","getUserAddress","url","loc","fetch","data","json","console","log","results","components","city","formatted","handleGetUserAddress","watchID","watchPosition","userGPSCoords","userGPSLatitude","userGPSLongitude","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/components/GPSLiveLocation.jsx"],"sourcesContent":["import { useState } from 'react'\nimport './App.css'\n\nfunction App() {\n  const [latitude, setLatitude] = useState()\n  const [longitude, setLongitude] = useState()\n  const [userAddress, setUserAddress] = useState()\n\n  const [GPSLatitude, setGPSLatitude] = useState()\n  const [GPSLongitude, setGPSLongitude] = useState()\n\n  const geo = navigator.geolocation\n\n  // Get User Current Location\n  geo.getCurrentPosition(userCoords)\n  function userCoords(position) {\n    let userLatitude = position.coords.latitude\n    let userLongitude = position.coords.longitude\n    // console.log(\"Latitude: \", userLatitude);\n    // console.log(\"Longitude: \", userLongitude);\n    setLatitude(userLatitude)\n    setLongitude(userLongitude)\n  }\n\n  const getUserAddress = async () => {\n    // let url = `https://api.opencagedata.com/geocode/v1/json?key=a8cd7eea001442e684440f396f71f97f&q=${latitude}%2C+${longitude}&pretty=1&no_annotations=1`\n    let url = `https://api.opencagedata.com/geocode/v1/json?key=55fb48633b1a4feea66fd7fdd0170d95&q=52.3877830%2C+9.7334394&pretty=1&no_annotations=1`\n    const loc = await fetch(url)\n    const data = await loc.json()\n    console.log(\"User Address: \", data);\n    console.log(\"User City: \", data.results[0].components.city);\n    setUserAddress(data.results[0].formatted)\n  }\n\n  const handleGetUserAddress = () => {\n    getUserAddress()\n  }\n\n  // Get User GPS Current Location\n  const watchID = geo.watchPosition(userGPSCoords)\n  function userGPSCoords(position) {\n    let userGPSLatitude = position.coords.latitude\n    let userGPSLongitude = position.coords.longitude\n    console.log(\"Latitude: \", userGPSLatitude);\n    console.log(\"Longitude: \", userGPSLongitude);\n    setGPSLatitude(userGPSLatitude)\n    setGPSLongitude(userGPSLongitude)\n  }\n\n  // const stopGPS = () => {\n  //   geo.clearWatch(watchID)\n  // }\n\n  return (\n    <>\n      <h1>Current Location</h1>\n      <h2>latitude- {latitude}</h2>\n      <h2>longitude- {longitude}</h2>\n      <h2>User Address- {userAddress}</h2>\n      <button onClick={handleGetUserAddress}>Get User Address</button>\n      <hr />\n      <h1>GPS Tracking</h1>\n      <h2>GPS Latitude:- {GPSLatitude}</h2>\n      <h2>GPS Longitude:- {GPSLongitude}</h2>\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}