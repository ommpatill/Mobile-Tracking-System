{"ast":null,"code":"var _jsxFileName = \"E:\\\\TYProject\\\\mobiletracker\\\\mobiletracker\\\\frontend\\\\src\\\\components\\\\LiveLocationTracker.js\",\n  _s = $RefreshSig$();\n// LiveLocationTracker.js\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\n// Define your Google Maps API key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8'; // Replace with your actual API key\n\nconst LiveLocationTracker = () => {\n  _s();\n  const [location, setLocation] = useState({\n    lat: null,\n    lng: null\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const geo = navigator.geolocation;\n\n    // Check if Geolocation is supported\n    if (geo) {\n      // Request permission to access location\n      navigator.permissions.query({\n        name: 'geolocation'\n      }).then(permissionStatus => {\n        if (permissionStatus.state === 'granted') {\n          // If permission is granted, update location\n          updateLocation();\n        } else if (permissionStatus.state === 'prompt') {\n          // Request location permission\n          geo.getCurrentPosition(position => {\n            setLocation({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            });\n          }, error => {\n            console.error('Error getting location:', error);\n            setError(error.message);\n          }, {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n          });\n        } else {\n          setError('Location permission denied. Please enable location access in your browser settings.');\n        }\n      });\n      const intervalId = setInterval(updateLocation, 5000); // Update location every 5 seconds\n      return () => clearInterval(intervalId);\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const updateLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, error => {\n      console.error('Error getting location:', error);\n      setError(error.message);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-center mb-4\",\n      children: \"Live Location Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: {\n          lat: location.lat || 0,\n          lng: location.lng || 0\n        },\n        zoom: 14,\n        mapContainerStyle: {\n          height: '800px',\n          width: '100%'\n        },\n        children: location.lat && location.lng && /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: location.lat,\n            lng: location.lng\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveLocationTracker, \"yBKkOhWiZUmbcwpoiikSiV385PI=\");\n_c = LiveLocationTracker;\nexport default LiveLocationTracker;\nvar _c;\n$RefreshReg$(_c, \"LiveLocationTracker\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","LiveLocationTracker","_s","location","setLocation","lat","lng","error","setError","geo","navigator","geolocation","permissions","query","name","then","permissionStatus","state","updateLocation","getCurrentPosition","position","coords","latitude","longitude","console","message","enableHighAccuracy","timeout","maximumAge","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","center","zoom","mapContainerStyle","height","width","_c","$RefreshReg$"],"sources":["E:/TYProject/mobiletracker/mobiletracker/frontend/src/components/LiveLocationTracker.js"],"sourcesContent":["// LiveLocationTracker.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\n// Define your Google Maps API key\r\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyA3E5Oa68_J4t4-4530RD0h_IA532wZn_8'; // Replace with your actual API key\r\n\r\nconst LiveLocationTracker = () => {\r\n  const [location, setLocation] = useState({ lat: null, lng: null });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n\r\n    // Check if Geolocation is supported\r\n    if (geo) {\r\n      // Request permission to access location\r\n      navigator.permissions.query({ name: 'geolocation' }).then((permissionStatus) => {\r\n        if (permissionStatus.state === 'granted') {\r\n          // If permission is granted, update location\r\n          updateLocation();\r\n        } else if (permissionStatus.state === 'prompt') {\r\n          // Request location permission\r\n          geo.getCurrentPosition(\r\n            (position) => {\r\n              setLocation({\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude,\r\n              });\r\n            },\r\n            (error) => {\r\n              console.error('Error getting location:', error);\r\n              setError(error.message);\r\n            },\r\n            {\r\n              enableHighAccuracy: true,\r\n              timeout: 5000,\r\n              maximumAge: 0,\r\n            }\r\n          );\r\n        } else {\r\n          setError('Location permission denied. Please enable location access in your browser settings.');\r\n        }\r\n      });\r\n\r\n      const intervalId = setInterval(updateLocation, 5000); // Update location every 5 seconds\r\n      return () => clearInterval(intervalId);\r\n    } else {\r\n      setError('Geolocation is not supported by this browser.');\r\n    }\r\n  }, []);\r\n\r\n  const updateLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Error getting location:', error);\r\n        setError(error.message);\r\n      },\r\n      {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-xl font-bold text-center mb-4\">Live Location Tracker</h2>\r\n      {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n      <LoadScript googleMapsApiKey={GOOGLE_MAPS_API_KEY}>\r\n        <GoogleMap\r\n          center={{ lat: location.lat || 0, lng: location.lng || 0 }}\r\n          zoom={14}\r\n          mapContainerStyle={{ height: '800px', width: '100%' }}\r\n        >\r\n          {location.lat && location.lng && (\r\n            <Marker position={{ lat: location.lat, lng: location.lng }} />\r\n          )}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveLocationTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}